
### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu-run
# Brightness value
set $bright 5%
# Colors
set $color_primary #c413d2
#set $color_secondary #00213D
set $color_background #000000
set $color_foreground #FFFFFF
# Assign variables for multiple monitors
set $mon1 DP-2
set $mon2 DP-3

### Key bindings
#
# Applications
#

    # Start a terminal
    bindsym $mod+Return exec $term

    # Use pactl to adjust volume in PulseAudio.
    bindsym XF86AudioRaiseVolume exec $HOME/.config/sway/scripts/volume.sh + 2
    bindsym XF86AudioLowerVolume exec $HOME/.config/sway/scripts/volume.sh - 2
    bindsym Shift+XF86AudioRaiseVolume exec $HOME/.config/sway/scripts/volume.sh + 10
    bindsym Shift+XF86AudioLowerVolume exec $HOME/.config/sway/scripts/volume.sh - 10
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

    # Use playerctl to enable play/pause buttons
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

    # start launcher
    bindsym $mod+Shift+d exec $menu

    # screenshot
#    bindsym $mod+Shift+s exec flameshot gui
    bindsym $mod+Shift+s exec grim -g "$(slurp)" - | wl-copy
    bindsym $mod+Ctrl+s exec grim -g "$(slurp -o)" - | wl-copy

    # backlight
    bindsym XF86MonBrightnessUp exec brightnessctl set +$bright
    bindsym XF86MonBrightnessDown exec brightnessctl set $bright-

    # power management
    mode "power" {
        bindsym $mod+1 exec $HOME/.config/sway/scripts/power.sh battery && swaymsg "mode \"default\""
        bindsym $mod+2 exec $HOME/.config/sway/scripts/power.sh powersave && swaymsg "mode \"default\""
        bindsym $mod+3 exec $HOME/.config/sway/scripts/power.sh performance && swaymsg "mode \"default\""
        bindsym $mod+4 exec $HOME/.config/sway/scripts/power.sh absolute_performance && swaymsg "mode \"default\""
        # Return to default mode
#        bindsym Return mode "default"
        bindsym Escape mode "default"
    }
    bindsym $mod+Shift+p mode "power"

#
# Window Management
#

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Move your focus around
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # Assign workspaces for different monitors
    # First 5 workspaces for $mon1 and the other 5 for $mon2
    workspace "1" output $mon1
    workspace "2" output $mon1
    workspace "3" output $mon1
    workspace "4" output $mon1
    workspace "5" output $mon1
    # Still assign all workspaces to $mod+number in case of only using 1 monitor
    workspace "6" output $mon2
    workspace "7" output $mon2
    workspace "8" output $mon2
    workspace "9" output $mon2
    workspace "10" output $mon2
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10

    # mode for switching workspaces on $mon2
    mode "Monitor 2" {
        # These bindings are for switching workspaces on $mon2
        # Workspaces 6-10 for the 2nd monitor
        bindsym $mod+1 workspace number 6
        bindsym $mod+2 workspace number 7
        bindsym $mod+3 workspace number 8
        bindsym $mod+4 workspace number 9
        bindsym $mod+5 workspace number 10

        # Move focused container to workspace
        bindsym $mod+Shift+1 move container to workspace number 6
        bindsym $mod+Shift+2 move container to workspace number 7
        bindsym $mod+Shift+3 move container to workspace number 8
        bindsym $mod+Shift+4 move container to workspace number 9
        bindsym $mod+Shift+5 move container to workspace number 10

        # bemenu
        bindsym $mod+Shift+d exec $menu

        # Moving focus to windows
        bindsym $mod+Left focus left
        bindsym $mod+Down focus down
        bindsym $mod+Up focus up
        bindsym $mod+Right focus right

        # move focused window
        bindsym $mod+Shift+Left move left
        bindsym $mod+Shift+Down move down
        bindsym $mod+Shift+Up move up
        bindsym $mod+Shift+Right move right

        # Switch the current container between different layout styles
        bindsym $mod+s layout stacking
        bindsym $mod+w layout tabbed
        bindsym $mod+e layout toggle split

        # toggle tiling / floating
        bindsym $mod+Shift+space floating toggle

        # change focus between tiling / floating windows
        bindsym $mod+space focus mode_toggle

        # There has to be a way to escape
        #bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+Shift+w mode "default"
    }
    bindsym $mod+Shift+w mode "Monitor 2"

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Sway Specific config
#
    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Reload sway
    bindsym $mod+Shift+r restart

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $HOME/.config/sway/wallpaper/wallpaper.png fill
#
# Example configuration:
#
output eDP-1 resolution 1920x1080@60hz scale 1.20
output HDMI-A-1 modeline 210.25 1920 2056 2256 2592  1080 1083 1088 1128 -hsync +vsync 
output DP-3 resolution 1920x1080@60hz position 1920,0
output DP-2 resolution 1920x1080@144hz adaptive_sync on
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
          timeout 300 'swaylock -f -c 000000' \
          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#
# Input configuration
# 
# Touchpad config
input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    #middle_emulation enabled
}
# Trackpoint config
input "2:14:ETPS/2_Elantech_TrackPoint" {
    accel_profile flat
#    pointer_accel 0.6
    pointer_accel 1
    dwt disabled
}
# Logitech Mouse config
input "1133:49291:Logitech_G502_HERO_Gaming_Mouse" {
    accel_profile flat
    pointer_accel -0.3
    dwt disabled
}
# Other Logitech Mouse config
input "1133:49278:Logitech_Gaming_Mouse_G402" {
    accel_profile flat
    pointer_accel 0
    dwt disabled
}
# Keyboard layout
input type:keyboard {
    xkb_layout de
}

#
# Themes & Colors
#
# Window borders
default_border pixel 1
for_window [class="^.*"] border pixel 1

# Window gaps
gaps inner 8
gaps outer 4

# class                 border  backgr. text    indicator child_border
client.focused          $color_primary    $color_background $color_foreground $color_primary    $color_primary
client.focused_inactive $color_background $color_background $color_foreground $color_background $color_background
client.unfocused        $color_background $color_background $color_foreground $color_background $color_background

# font
font pango:Cascadia Mono 11

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
    # Use i3status for the status command
    status_command i3status

    colors {
        statusline $color_foreground
        background $color_background
        inactive_workspace $color_background $color_background $color_foreground
        active_workspace $color_background $color_background $color_foreground
        focused_workspace $color_primary $color_background $color_foreground
        # urgent_workspace <border> <background> <text>
        urgent_workspace #FF0000 $color_background $color_foreground
        separator $color_primary
    }
}

#
# Autostart
#
# dbus
exec --no-startup-id dbus-update-activation-environment --all
# Start XDG autostart .desktop files using dex.
exec --no-startup-id dex --autostart --environment sway
# notification daemon
exec_always $HOME/.config/sway/scripts/restart.sh mako
# flameshot for screenshots
exec_always $HOME/.config/sway/scripts/restart.sh flameshot
# blueman for bluetooth
exec_always $HOME/.config/sway/scripts/restart.sh blueman-applet
# easyeffects
exec_always $HOME/.config/sway/scripts/restart.sh easyeffects --gapplication-service 
# dumb polkit agent
exec_always $HOME/.config/sway/scripts/restart.sh polkit-dumb-agent 

include /etc/sway/config.d/*
